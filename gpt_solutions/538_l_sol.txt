#include <vector>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

class Solution {
public:
    void func1(TreeNode *root, vector<int> &data)
    {
        if (root == NULL)
        {
            return ; 
        }
        func1(root->right, data) ; 

        data.push_back(root->val) ; 

        func1(root->left, data) ; 
    }

    void func2(TreeNode *root, vector<int> &data, int &index)
    {
        if (root == NULL)
        {
            return ; 
        }
        // L
        func2(root->right, data, index) ; 
        // N
        root->val = data[index] ;
        index ++ ;   
        // R
        func2(root->left, data, index) ; 
    }

    TreeNode* func3(TreeNode* root) {
        if (root == NULL)
            return NULL;

        vector<int> data ; 
        func1(root, data) ; 

        int n = data.size() ; 
        for (int i = n - 2; i >= 0; i--)
        {
            data[i] += data[i + 1] ; 
        }

        int index = 0 ; 
        func2(root, data, index) ; 

        return root ; 
    }
};
