#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Solution {
private:
    bool check(string &s, int i, int j) {
        while (i < j) {
            if (s[i] != s[j]) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

public:
    string longestPalindrome(string s) {
        int n = s.size();
        vector<string> substring;
        for (int i = 0; i < n; i++) {
            string temp = ""; // fix: changed "s" to ""
            for (int j = i; j < n; j++) {
                temp += s[j];
                substring.push_back(temp);
            }
        }
        int max_len = 0;
        string finalans = substring[0];
        int m = substring.size();
        for (int i = 0; i < m; i++) {
            int len = substring[i].size(); // fix: changed variable name to len
            if (check(substring[i], 0, len - 1)) {
                if (len > max_len) { // fix: changed condition to len > max_len
                    max_len = len;
                    finalans = substring[i];
                }
            }
        }
        return finalans;
    }
};

int main() {
    Solution solution;
    string test = "babad";
    cout << solution.longestPalindrome(test) << endl;
    return 0;
}
